package com.company;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.io.File;

public class Main {
    
    static void print_events_with_most_probable_results(Root array_of_events){
        array_of_events.getEvents().sort(new Events_Comparator());
        for(int i = 0; i < 10;i++){
            System.out.println("EVENT: " + (i+1));
            System.out.println("Start date: " + array_of_events.getEvents().get(i).start_date + ",");
            System.out.println("Competition name: " + array_of_events.getEvents().get(i).competition_name + ",");
            System.out.println(array_of_events.getEvents().get(i).competitors.get(0).name +
                    " (" + array_of_events.getEvents().get(i).competitors.get(0).country + ") vs. "
                    + array_of_events.getEvents().get(i).competitors.get(1).name +
                    " (" + array_of_events.getEvents().get(i).competitors.get(1).country + ")" + ",");
            System.out.println("Venue: " + array_of_events.getEvents().get(i).venue.name + ",");
            if(array_of_events.getEvents().get(i).probability_home_team_winner >= array_of_events.getEvents().get(i).probability_away_team_winner){
                if(array_of_events.getEvents().get(i).probability_home_team_winner >= array_of_events.getEvents().get(i).probability_draw){
                    System.out.println("Highest  probable result : HOME_TEAM_WIN (" + array_of_events.getEvents().get(i).probability_home_team_winner + ")");
                }
                else{
                    System.out.println("Highest  probable result : DRAW (" + array_of_events.getEvents().get(i).probability_draw + ")");
                }
            }
            else{
                if(array_of_events.getEvents().get(i).probability_away_team_winner >= array_of_events.getEvents().get(i).probability_draw){
                    System.out.println("Highest  probable result : HOME_AWAY_WIN (" + array_of_events.getEvents().get(i).probability_away_team_winner + ")");
                }
                else{
                    System.out.println("Highest  probable result : DRAW (" + array_of_events.getEvents().get(i).probability_draw + ")");
                }
            }
            System.out.println();
        }
    }
    
    static void print_events_with_parameter(int count, Root temp){
        try {
            for (int i = count; i >= 0; i--) {
                System.out.println(temp.events.get(i));
            }
        }
        catch (IndexOutOfBoundsException e){
            System.out.println("This number is larger than the count of events");
        }
    }
    
    public static void main(String[] args) throws IOException {
        File newState = new File("BE_data.json");
        ObjectMapper reader = new ObjectMapper();
        Root array_of_events = reader.readValue(newState, Root.class);
        
        print_events_with_most_probable_results(array_of_events);
        
        Scanner myInput = new Scanner( System.in );
        System.out.println("Please input count of events that you need");
        int count_of_events = myInput.nextInt();
        print_events_with_parameter(count_of_events,array_of_events);
    }
}
